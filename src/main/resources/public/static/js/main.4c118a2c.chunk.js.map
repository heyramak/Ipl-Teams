{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","components/WinLossComponent.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","isTie","result","cardColour","matchResult","resultMargin","className","to","date","venue","playerOfMatch","umpire1","umpire2","MatchSmallCard","WinLossComponent","props","team","data","title","value","totalMatches","totalWins","color","TeamPage","useState","matches","setTeam","useParams","useEffect","a","fetch","process","response","json","fetchTeam","rel","href","class","slice","map","id","YearSelector","currentSelectedYear","years","year","push","label","history","useHistory","options","defaultValue","onChange","event","selectedYear","replace","MatchPage","setMatches","search","useLocation","queryParams","queryString","parse","filteredMatch","setFilteredMatch","searchTerm","setSearchTerm","filterTerm","setFilterTerm","fetchMatches","target","currentList","filteredList","filter","item","tossDecision","length","selected","type","city","toLowerCase","includes","placeholder","style","getImagePath","img","teamNames","teamImages","getLogoAccordingToTeam","src","alt","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c118a2c.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    const isTie = match.result === 'tie' ? true : false;\r\n    var cardColour = isTie ? 'MatchDetailCard tie-card' : isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card';\r\n    var matchResult = \"\";\r\n    if(isTie) {\r\n        matchResult = \"There was a tie between \" + match.team1 + \" and \" + match.team2;   \r\n    } else {\r\n        matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\r\n    }\r\n    return (\r\n         <div className={cardColour}>\r\n          <div>\r\n          <span className=\"vs\">vs</span>\r\n          <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n          <h2 className=\"match-date\">{match.date}</h2>\r\n          <h3 className=\"match-venue\">at {match.venue}</h3>\r\n          <h3 className=\"match-result\"> {matchResult} </h3>\r\n        </div>\r\n        <div className=\"additional-detail\">\r\n          <h3>First Innings</h3>\r\n          <p>{match.team1}</p>\r\n          <h3>Second Innings</h3>\r\n          <p>{match.team2}</p>\r\n          <h3>Man of the match</h3>\r\n          <p>{match.playerOfMatch}</p>\r\n          <h3>Umpires</h3>\r\n          <p>{match.umpire1}, {match.umpire2}</p>\r\n          \r\n\r\n        </div>\r\n        \r\n        </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({match, teamName}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    const isTie = match.result === 'tie' ? true : false;\r\n    var cardColour = isTie ? 'MatchSmallCard tie-card' : isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card';\r\n    var matchResult = \"\";\r\n    if(isTie) {\r\n        matchResult = \"There was a tie between \" + match.team1 + \" and \" + match.team2;   \r\n    } else {\r\n        matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\r\n    }return (\r\n        <div className={cardColour}>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <p className=\"match-result\">{ matchResult } </p>\r\n        \r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\n\r\nexport const WinLossComponent = props => {\r\n    if (props == null || props.team == null) {\r\n        return <></>\r\n    }\r\n    return (<div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n            data={[\r\n                {title: 'Losses', value: props.team.totalMatches - props.team.totalWins, color: '#a34d5d'},\r\n                {title: 'Wins', value: props.team.totalWins, color: '#4da375'},\r\n            ]}\r\n        />\r\n    </div>)\r\n} ","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport {WinLossComponent} from \"../components/WinLossComponent\";\r\n\r\nimport './TeamPage.scss';\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({matches: []});\r\n    const { teamName } = useParams();\r\n    useEffect(\r\n        () => {\r\n         const fetchTeam = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n            const data = await response.json();\r\n            setTeam(data);\r\n\r\n         };\r\n         fetchTeam();\r\n            \r\n\r\n\r\n        }, [teamName]\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not found</h1>\r\n    }\r\n    return (\r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n\t\t<Link to=\"/\">\r\n        <button class=\"home\"><i class=\"fa fa-home\"></i> Home</button>\r\n        </Link>\r\n        <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\">\r\n            <h1 className=\"team-name\">{team.teamName}</h1>\r\n        </div>\r\n        <WinLossComponent team={team}/>\r\n        <div className=\"match-detail-section\">\r\n            <h3>Latest Matches</h3>\r\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n        </div>\r\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n        <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More </Link>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName, currentSelectedYear }) => {\r\n    \r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let year = startYear; year <= endYear; year++) {\r\n        years.push({\r\n            value: year,\r\n            label: year,\r\n        });\r\n    }\r\n\r\n    const history = useHistory();\r\n    const handleYearChange = (selectedYear) =>\r\n        // We want to replace the current page in the stack, as we don't wanna save the history of\r\n        // different years selected. This will result in going back to the team page when clicking\r\n        // the back button in the browser.\r\n        history.replace(`/teams/${teamName}/matches?year=${selectedYear}`)\r\n\r\n\r\n    return (\r\n        <Select className=\"YearSelector\" options={years}\r\n            defaultValue={{ label: currentSelectedYear, value: currentSelectedYear }}\r\n            onChange={event => handleYearChange(event.value)} />\r\n    )\r\n\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link, useLocation } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport queryString from 'query-string';\r\n\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n\r\n    const [matches, setMatches] = useState([]);\r\n\t\r\n    const { teamName } = useParams();\r\n    const { search } = useLocation();\r\n    const queryParams = queryString.parse(search);\r\n\tconst [filteredMatch, setFilteredMatch]= useState([]);\r\n\tconst [searchTerm,setSearchTerm]=useState(\"\");\r\n    const [filterTerm,setFilterTerm]=useState(\"\");\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${queryParams.year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, queryParams.year]\r\n    );\r\n\r\n\tconst editFilterTerm =(event)=>{\r\n        debugger;\r\n        let filterTerm= event.target.value;\r\n        setFilterTerm(filterTerm);\r\n        let currentList= matches;\r\n       let filteredList=[];\r\n        switch (filterTerm) {\r\n            case \"win\":\r\n              filteredList = currentList.filter(item =>\r\n                item.matchWinner === teamName);\r\n              break;\r\n            case \"loss\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.matchWinner !== teamName);\r\n              break;\r\n            case \"tie\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.result === \"tie\");\r\n                break;\r\n            case \"bat\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.tossDecision === \"bat\");\r\n              break;\r\n            case \"ball\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.tossDecision === \"field\");\r\n              break;\r\n            default:\r\n              filteredList = currentList;\r\n          }\r\n          if (filteredList && filteredList.length > 0) {\r\n            setFilteredMatch(filteredList);\r\n          }\r\n    }\r\n\r\n    const editSearchTerm=(event)=>{\r\n        let searchTerm= event.target.value;\r\n        setSearchTerm(searchTerm);\r\n        let currentList=matches;\r\n        let filteredList=[];\r\n        filteredList = currentList.filter(\r\n            (item) =>\r\n              item.city.toLowerCase().includes(searchTerm.toLowerCase()) || //City\r\n              item.playerOfMatch.toLowerCase().includes(searchTerm.toLowerCase()) || //player of match\r\n              item.venue.toLowerCase().includes(searchTerm.toLowerCase()) || //venue\r\n              item.umpire1.toLowerCase().includes(searchTerm.toLowerCase()) || //umpire1\r\n              item.umpire2.toLowerCase().includes(searchTerm.toLowerCase())  //umpire2\r\n            \r\n          );\r\n          if (filteredList && filteredList.length > 0) {\r\n            setFilteredMatch(filteredList);\r\n          }\r\n    }\r\n\t\r\n    return (\r\n        <div>\r\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n\t\t<Link to=\"/\">\r\n        <button class=\"home\"><i class=\"fa fa-home\"></i> Home</button>\r\n        </Link>\r\n        <div className=\"MatchPage\">\r\n        <h1 className=\"page-heading\">{teamName} matches in {queryParams.year}</h1>\r\n            <div className=\"year-selector\">\r\n            <h3 className=\"select-year-label\"> Select Year </h3>\r\n                <YearSelector teamName={teamName} currentSelectedYear={queryParams.year} />\r\n            </div>\r\n            <div>\r\n\t\t\t\t<select\r\n                    onChange={editFilterTerm}\r\n                    value={filterTerm}\r\n\r\n                >\r\n                    <option value=\"\" selected>\r\n                        Filter By\r\n                    </option>\r\n                    <option value=\"win\">Wins</option>\r\n                    <option value=\"loss\">Losses</option>\r\n                    <option value=\"tie\">Ties</option>\r\n                    <option value=\"bat\">Bat First</option>\r\n                    <option value=\"bowl\">Bowl First</option>\r\n                </select>\r\n                <input\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={editSearchTerm}\r\n\r\n                    placeholder=\"Search by keyword\"\r\n                />\r\n                \r\n                {\r\n\t\t\t\t\tfilteredMatch && filteredMatch.length>0 ?\r\n                    filteredMatch.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n\t\t\t\t\t :\r\n                    <div className=\"col\">\r\n                        <p style={{\"textAlign\":\"center\",\"padding\":\"20%\"}}>No matches found</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport teamImages from './TeamImages.json'\r\nimport './TeamTile.scss';\r\n\r\nconst getLogoAccordingToTeam = (team) =>{\r\n    var teamNames = teamImages;\r\n    var image = teamNames[team] ? teamNames[team] :\"\";\r\n    return image;\r\n\r\n}\r\nconst getImagePath =(teamName)=>{\r\n   let img = getLogoAccordingToTeam(teamName);\r\n  img= img.replace(/['\"]+/g, \"\");\r\n   return (\r\n    <img  className=\"logoImg\" src={`../images/${img}.png`} alt=\"\"  />\r\n  );\r\n}\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                    <Link to={`/teams/${teamName}`}>\r\n                        {teamName}\r\n                    </Link>\r\n                </h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n\t\t\t\t\t\t{getImagePath(teamName)}\r\n                    </Link>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    useEffect(\r\n        () => {\r\n         const fetchAllTeams = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n            const data = await response.json();\r\n            setTeams(data);\r\n\r\n         };\r\n         fetchAllTeams();\r\n            \r\n\r\n\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">HOME</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}","import './App.scss';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path=\"/teams/:teamName/matches\" component={MatchPage} />\n          <Route path=\"/teams/:teamName\" component={TeamPage} />\n          <Route path=\"/\" component={HomePage} />\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}