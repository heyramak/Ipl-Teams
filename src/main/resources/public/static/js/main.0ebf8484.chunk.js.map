{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","components/WinLossComponent.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","isTie","result","isMatchCancelled","playerOfMatch","cardColour","matchResult","resultMargin","className","to","date","venue","umpire1","umpire2","MatchSmallCard","WinLossComponent","props","team","data","title","value","totalMatches","totalWins","color","TeamPage","useState","matches","setTeam","useParams","useEffect","a","fetch","process","response","json","fetchTeam","slice","map","id","YearSelector","currentSelectedYear","years","year","push","label","history","useHistory","options","defaultValue","onChange","event","selectedYear","replace","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","margin","MatchPage","setMatches","classes","filteredMatch","setFilteredMatch","searchTerm","setSearchTerm","filterTerm","setFilterTerm","fetchMatches","FormControl","InputLabel","Select","labelId","target","currentList","filteredList","filter","item","tossDecision","length","MenuItem","htmlFor","city","toLowerCase","includes","placeholder","style","getImagePath","img","teamNames","teamImages","getLogoAccordingToTeam","src","alt","TeamTile","HomePage","teams","setTeams","fetchAllTeams","NavBar","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebf8484.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n  if (!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  const isTie = match.result === 'tie' ? true : false;\r\n  const isMatchCancelled = match.matchWinner === \"NA\" ? true : false;\r\n  var playerOfMatch = isMatchCancelled ? 'No decision' : match.playerOfMatch;\r\n  var cardColour = isTie ? 'MatchDetailCard tie-card' : isMatchCancelled ? 'MatchDetailCard cancelled-card' : isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card';\r\n  var matchResult = \"\";\r\n  if (isTie) {\r\n    matchResult = \"There was a tie between \" + match.team1 + \" and \" + match.team2;\r\n  }\r\n  else if (isMatchCancelled) {\r\n    matchResult = \"Match Cancelled\";\r\n  }\r\n  else {\r\n    matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\r\n  }\r\n  return (\r\n    <div className={cardColour}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\"> {matchResult} </h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the match</h3>\r\n        <p>{playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    const isTie = match.result === 'tie' ? true : false;\r\n    const isMatchCancelled = match.matchWinner === \"NA\" ? true : false;\r\n    var cardColour = isTie ? 'MatchSmallCard tie-card' : isMatchCancelled ? 'MatchSmallCard cancelled-card' : isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card';\r\n    var matchResult = \"\";\r\n    if (isTie) {\r\n        matchResult = \"There was a tie between \" + match.team1 + \" and \" + match.team2;\r\n    }\r\n    else if (isMatchCancelled) {\r\n        matchResult = \"Match Cancelled\";\r\n    }\r\n    else {\r\n        matchResult = match.matchWinner + \" won by \" + match.resultMargin + \" \" + match.result;\r\n    } return (\r\n        <div className={cardColour}>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n            <p className=\"match-result\">{matchResult} </p>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nexport const WinLossComponent = props => {\r\n    if (props == null || props.team == null) {\r\n        return <></>\r\n    }\r\n    return (<div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n            data={[\r\n                { title: 'Losses', value: props.team.totalMatches - props.team.totalWins, color: '#a34d5d' },\r\n                { title: 'Wins', value: props.team.totalWins, color: '#4da375' },\r\n            ]}\r\n        />\r\n    </div>)\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { WinLossComponent } from \"../components/WinLossComponent\";\r\n\r\nimport './TeamPage.scss';\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchTeam = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n\r\n            };\r\n            fetchTeam();\r\n\r\n\r\n\r\n        }, [teamName]\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not found</h1>\r\n    }\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n            <WinLossComponent team={team} />\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n            </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More  </Link>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","\r\nimport { React } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Select from 'react-select';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName, currentSelectedYear }) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let year = startYear; year <= endYear; year++) {\r\n        years.push({\r\n            value: year,\r\n            label: year,\r\n        });\r\n    }\r\n    const history = useHistory();\r\n    const handleYearChange = (selectedYear) =>\r\n        // We want to replace the current page in the stack, as we don't wanna save the history of\r\n        // different years selected. This will result in going back to the team page when clicking\r\n        // the back button in the browser.\r\n        history.replace(`/teams/${teamName}/matches/${selectedYear}`)\r\n\r\n    return (\r\n        <Select className=\"YearSelector\" options={years}\r\n            defaultValue={{ label: currentSelectedYear, value: currentSelectedYear }}\r\n            onChange={event => handleYearChange(event.value)} />\r\n    )\r\n\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { YearSelector } from '../components/YearSelector';\r\n//import Select from 'react-select';\r\n\r\nimport './MatchPage.scss';\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nexport const MatchPage = () => {\r\n\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const classes = useStyles();\r\n    const { teamName, year } = useParams();\r\n    const [filteredMatch, setFilteredMatch] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [filterTerm, setFilterTerm] = useState(\"\");\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n                setFilteredMatch(data);\r\n\r\n            };\r\n            fetchMatches();\r\n\r\n\r\n\r\n        }, [teamName, year]\r\n    );\r\n\r\n    const editFilterTerm = (event) => {\r\n        debugger;\r\n        let filterTerm = event.target.value;\r\n        setFilterTerm(filterTerm);\r\n        let currentList = matches;\r\n        let filteredList = [];\r\n        switch (filterTerm) {\r\n            case \"win\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.matchWinner === teamName);\r\n                break;\r\n            case \"loss\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.matchWinner !== teamName);\r\n                break;\r\n            case \"tie\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.result === \"tie\");\r\n                break;\r\n            case \"bat\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.tossDecision === \"bat\");\r\n                break;\r\n            case \"ball\":\r\n                filteredList = currentList.filter(item =>\r\n                    item.tossDecision === \"field\");\r\n                break;\r\n            default:\r\n                filteredList = currentList;\r\n        }\r\n        if (filteredList && filteredList.length > 0) {\r\n            setFilteredMatch(filteredList);\r\n        }\r\n    }\r\n\r\n    const editSearchTerm = (event) => {\r\n        let searchTerm = event.target.value;\r\n        setSearchTerm(searchTerm);\r\n        let currentList = matches;\r\n        let filteredList = [];\r\n        filteredList = currentList.filter(\r\n            (item) =>\r\n                item.city.toLowerCase().includes(searchTerm.toLowerCase()) || //City\r\n                item.playerOfMatch.toLowerCase().includes(searchTerm.toLowerCase()) || //player of match\r\n                item.venue.toLowerCase().includes(searchTerm.toLowerCase()) || //venue\r\n                item.umpire1.toLowerCase().includes(searchTerm.toLowerCase()) || //umpire1\r\n                item.umpire2.toLowerCase().includes(searchTerm.toLowerCase())  //umpire2\r\n\r\n        );\r\n        if (filteredList && filteredList.length > 0) {\r\n            setFilteredMatch(filteredList);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3> Select Year </h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n                <div className=\"filter-option\">\r\n                    <FormControl className={classes.margin}>\r\n                        <h3> Filter </h3>\r\n                        <InputLabel id=\"select-label\"></InputLabel>\r\n                        <Select\r\n                            labelId=\"select-label\"\r\n                            id=\"filter\"\r\n                            value={filterTerm}\r\n                            onChange={editFilterTerm}\r\n                            input={<BootstrapInput />}>\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            <MenuItem value={'win'}>Win</MenuItem>\r\n                            <MenuItem value={'loss'}>Loss</MenuItem>\r\n                            <MenuItem value={'tie'}>Tie</MenuItem>\r\n                            <MenuItem value={'bat'}>Bat First</MenuItem>\r\n                            <MenuItem value={'ball'}>Bowl First</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.margin}>\r\n                        <h3> Search by keywords </h3>\r\n                        <InputLabel htmlFor=\"textbox\"></InputLabel>\r\n                        <BootstrapInput id=\"textbox\" value={searchTerm}\r\n                            onChange={editSearchTerm}\r\n                            placeholder=\"Search by keyword\" />\r\n                    </FormControl>\r\n                </div>\r\n                {\r\n                    filteredMatch && filteredMatch.length > 0 ?\r\n                        filteredMatch.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n                        :\r\n                        <div className=\"col\">\r\n                            <p style={{ \"textAlign\": \"center\", \"padding\": \"20%\" }}>No matches found</p>\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport teamImages from './TeamImages.json'\r\nimport './TeamTile.scss';\r\n\r\nconst getLogoAccordingToTeam = (team) => {\r\n    var teamNames = teamImages;\r\n    var image = teamNames[team] ? teamNames[team] : \"\";\r\n    return image;\r\n\r\n}\r\nconst getImagePath = (teamName) => {\r\n    let img = getLogoAccordingToTeam(teamName);\r\n    img = img.replace(/['\"]+/g, \"\");\r\n    return (\r\n        <img className=\"logoImg\" src={`../images/${img}.png`} alt=\"\" />\r\n    );\r\n}\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n            <Link to={`/teams/${teamName}`}>\r\n                {getImagePath(teamName)}\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n\r\n            };\r\n            fetchAllTeams();\r\n\r\n\r\n\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL TEAMS</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import { React } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss';\r\n\r\nexport const NavBar = () => {\r\n\r\n    return (\r\n        <div className=\"NavBar\">\r\n            <Link to={``}>{'HOME'}</Link>\r\n        </div>\r\n    );\r\n}","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nimport { NavBar } from \"./components/NavBar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}